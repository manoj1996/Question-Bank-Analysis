The need for clustering

127

method call getR(). This method calculates the distance of every element from the 
origin of all the attribute values. Think of it as an arrow from the center of our coordi-
nates  (whose  attribute  values  are  all  zero)  to  each  data  point.  The  actual  value  is 
obtained by using the class EuclideanDistance, which, as the name suggests, imple-
ments the Euclidean distance that we introduced in chapter 3.

Listing 4.2  SortedArrayClustering : sort an array of data points and print them  

public class SortedArrayClustering {

  public static void cluster(DataPoint[] points) {

    Arrays.sort(points, new Comparator<DataPoint>() {   

    public int compare(DataPoint p1, DataPoint p2) {

Sort in 
descending order

          int result = 0;
      // sort based on score value
      if (p1.getR() < p2.getR()) {
          result = 1;
      } else if (p1.getR() > p2.getR()) {
          result = -1;
      } else {
          result = 0;
      }
      return result;
    }
    });

    for (int i=0; i < points.length; i++) {
      System.out.println(points[i].toString());
    }
  }
}

Since our attributes evaporated and we’re left with all the elements on a line, we must 
deal with two main issues. First, we still have to decide how many clusters exist and 
what they are. Second, the lack of normalization of the data causes the value of age to 
dominate over all the other values in the calculation of the Euclidean distance. This 
undesirable effect can be ameliorated by normalizing the value of the attributes in the 
dataset, but it would be hard to do this well for an arbitrary dataset. 

 We’re looking for clustering algorithms that could be characterized as intelligent. 
Assuming that humans are intelligent, what would a human think after looking at that 
dataset?  What  clusters  would  a  human  identify  in  it?  In  particular,  let’s  focus  on 
the group  of  people  over  40.  George,  Jack,  John,  Maria,  and  Lukas  are  all  in  their 
early 40s and most of their attribute values are identical or very similar. But, everybody 
except  Maria  is  paid  to  contribute  in  their  open  source  projects  and  Maria’s  main 
motivation for participating in open source projects seems to be a desire to improve 
her skills, and thereby increase her income. Maria should probably not be included in 
the same cluster as George, Jack, John, and Lukas, but that’s impossible based on our 
sorting results! 

Licensed to Deborah Christiansen <pedbro@gmail.com>

Download at Boykma.Com